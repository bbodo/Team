<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Manager">  
  
  	<!-- 유저 정보 가져가기 -->
	<select id="GetAllUser"
			resultType="com.green.user.vo.UserVo">
	
		SELECT
 			USERCODE,
 			USERID,
			PASSWD,
			USERNAME,
			BIRTHDAY,
			GENDER,
			GRADE,
			ADDR,
			EMAIL,
			TO_CHAR( JOINDATE, 'YYYY-MM-DD HH24:MI:SS' ) AS JOINDATE,
			POINT,
			DELMEM,
			NICKNAME
 		FROM
 			MEMBER
 		WHERE
 			DELMEM &lt;= 0
		ORDER BY
			USERCODE DESC
	</select>
 	
 	<!-- 유저 정보 담아가기 -->
 	<select id="GetUser"
 			resultType="com.green.user.vo.UserVo">
 	
 		SELECT
 			USERCODE,
 			USERID,
			PASSWD,
			USERNAME,
			BIRTHDAY,
			GENDER,
			GRADE,
			ADDR,
			EMAIL,
			TO_CHAR( JOINDATE, 'YYYY-MM-DD HH24:MI:SS' ) AS JOINDATE,
			POINT,
			DELMEM,
			NICKNAME
 		FROM
 			MEMBER
 		WHERE
 			USERCODE = #{ usercode }
 	
 	</select>
 	
 	<!-- 유저 정보 수정 -->
 	<update id="UpdateUser">
 	
 		UPDATE
 			MEMBER
 		SET
			PASSWD   = #{ passwd },
			USERNAME = #{ username },
			BIRTHDAY = #{ birthday },
			GENDER   = #{ gender },
			GRADE    = #{ grade },
			ADDR     = #{ addr },
			EMAIL    = #{ email },
 			POINT     = #{ point }
 		WHERE
 			USERCODE = #{ usercode }
 			
 	</update>
 	
 	<!-- 유저 탈퇴 처리 -->
 	<delete id="DeleteUser">
 	
 		UPDATE
 			MEMBER
 		SET
 			DELMEM = 1
 		WHERE
 			USERCODE = #{ usercode }
 	
 	</delete>
 	
 <!-- 	<insert id="AddMenu">
 	
 		INSERT INTO
 			MENUS
 			(
	 			MENU_ID,
				MENU_NAME,
				MENU_SEQ
 			)
 			VALUES
 			(
 				#{ menu_id },
 				#{ menu_name },
 				#{ menu_seq }
 			)
 		
 	
 	</insert> -->
 	
 	<!-- 메뉴 등록 -->
 	<insert id="AddMenu2" >
      <selectKey keyProperty="menu_id,menu_seq"
         resultType="com.green.menus.vo.MenuVo" 
		 order="BEFORE" >
         SELECT menu_id,menu_seq
			 FROM
			( SELECT  'MENU' ||
			   TRIM( TO_CHAR( SUBSTR( NVL( MAX(MENU_ID), 'MENU00'), 5, 2 ) +1, '00') )  AS MENU_ID
			  FROM MENUS) menu_id, 			
			(SELECT   NVL( MAX(MENU_SEQ), 0 ) + 1 as menu_seq
			  FROM   MENUS) menu_seq
      </selectKey>           
		INSERT INTO
			MENUS 
			( 
				MENU_ID, 
				MENU_NAME,
				MENU_SEQ 
			)
			VALUES
			(
				#{menu_id},
				#{menu_name},
				#{menu_seq}
			)

    </insert>
 	
 	<!-- 메뉴수정 -->
 	<update id="UpdateMenu">
 	
 		UPDATE
 			MENUS
 		SET
 			MENU_NAME = #{ menu_name },
 			MENU_SEQ = #{ menu_seq }
 		WHERE
 			MENU_ID = #{ menu_id }
 			
 	</update>
 	
 	<!-- 메뉴 삭제 -->
 	<delete id="DeleteMenu">
 	
 		DELETE
 		FROM
 			MENUS
 		WHERE
 			MENU_ID = #{ menu_id }
 	
 	</delete>
 	
 	<!-- 서브메뉴 추가 -->
 	<insert id="AddSubMenu" >
      <selectKey keyProperty="submenu_id,submenu_seq"
         resultType="com.green.menus.vo.SubmenuVo" 
		 order="BEFORE" >
         SELECT submenu_id,submenu_seq
			 FROM
			( SELECT  'SUBMENU' ||
			   TRIM( TO_CHAR( SUBSTR( NVL( MAX(SUBMENU_ID), 'SUBMENU00'), 8, 2 ) +1, '00') )  AS SUBMENU_ID
			  FROM SUBMENUS) submenu_id, 			
			(SELECT   NVL( MAX(SUBMENU_SEQ), 0 ) + 1 as submenu_seq
			  FROM   SUBMENUS) submenu_seq
      </selectKey>           
		INSERT INTO
			SUBMENUS 
			( 
				SUBMENU_ID, 
				SUBMENU_NAME,
				SUBMENU_SEQ,
				MENU_ID 
			)
			VALUES
			(
				#{ submenu_id },
				#{ submenu_name },
				#{ submenu_seq },
				#{ menu_id }
			)

    </insert>
 	
 	<!-- 서브메뉴 삭제 -->
 	<delete id="DeleteSubmenu">
 	
 		DELETE
 		FROM
 			SUBMENUS
 		WHERE
 			SUBMENU_ID = #{ submenu_id }
 	
 	</delete>
 	
 	<update id="UpdateSubmenu">
 	
 		UPDATE
 			SUBMENUS
 		SET
 			MENU_ID = #{ menu_id },
 			SUBMENU_NAME = #{ submenu_name },
 			SUBMENU_SEQ = #{ submenu_seq}
 		WHERE
 			SUBMENU_ID = #{ submenu_id }
 	
 	</update>
 	
 	
 	<!-- 스토어 리스트 가져오기  -->
 	<select id="StoreList"
			resultType="com.green.manager.vo.StoreVo">
	
	SELECT
			ROW_NUMBER() OVER(ORDER BY NREF DESC, STEP ASC)  RNUM,
			B.BOARD_IDX,
			B.SUBMENU_ID,
			B.BOARD_TITLE,
			B.BOARD_CONT,
			B.MARKET_VALUE,
            MA.MANAGERCODE,
			TO_CHAR(B.BOARD_REGDATE, 'YYYY-MM-DD HH24:MI:SS') BOARD_REGDATE,
			B.READCOUNT,
			B.BNUM,
			B.LVL,
			B.STEP,
			B.NREF,
			B.DELBOARD,
			B.PARENT
		FROM
			BOARD B

		JOIN MANAGER MA ON B.MANAGERCODE = MA.MANAGERCODE
        WHERE 
            SUBMENU_ID  =  'SUBMENU17'
		
	</select>
	
	<!-- 스토어 상품 등록  -->
	<insert id="AddStore">
	
	INSERT INTO
		BOARD
		(
			BOARD_IDX,
			SUBMENU_ID,
			BOARD_TITLE,
			BOARD_CONT,
			MARKET_VALUE,
			USERCODE,
			MANAGERCODE,
			BNUM,
			NREF
		)
	VALUES
		(
			(SELECT  NVL( MAX(BOARD_IDX), 0 ) + 1 FROM BOARD),
			'SUBMENU17',
			#{ board_title },
			#{ board_cont },
			#{ market_value },
			'0',
			'1',
			(SELECT  NVL( MAX(BOARD_IDX), 0 ) + 1 FROM BOARD),
			(SELECT  NVL( MAX(BOARD_IDX), 0 ) + 1 FROM BOARD)
		)
	</insert>
 
 <!-- 원글 정보 가져가기 -->
	<select   id             = "GetBoard"
	          resultType     = "com.green.manager.vo.StoreVo">
		
		SELECT
			ROW_NUMBER() OVER(ORDER BY NREF DESC, STEP ASC)  RNUM,
			B.BOARD_IDX,
			B.SUBMENU_ID,
			B.BOARD_TITLE,
			B.BOARD_CONT,
			B.MARKET_VALUE,
            MA.MANAGERCODE,
			TO_CHAR(B.BOARD_REGDATE, 'YYYY-MM-DD HH24:MI:SS') BOARD_REGDATE,
			B.READCOUNT,
			B.BNUM,
			B.LVL,
			B.STEP,
			B.NREF,
			B.DELBOARD,
			B.PARENT
		FROM
			BOARD B

		JOIN MANAGER MA ON B.MANAGERCODE = MA.MANAGERCODE
        
		WHERE
			BOARD_IDX = #{ board_idx }

	</select> 
	
	
	<!-- 파일 저장 -->
    <insert  id="FileInsert">
      <foreach collection="fileList" item="file"
           index      = "i"  
           open       = "INSERT ALL"    
           close      = "SELECT * FROM DUAL"
           separator  = " " >
           INTO  BOARD_FILES  VALUES (
                GET_FILENUM()
              , ( SELECT MAX(BOARD_IDX) FROM BOARD  )
              , #{ file.filename   }
              , #{ file.fileext    }
              , #{ file.sfilename  }
           )
      </foreach>
   </insert>	
	
	
	<select   id         = "FileList" 
	          resultType = "com.green.market.vo.FileVo">
	   
	       SELECT
			   FILE_NUM,
			   BOARD_IDX,
			   FILENAME,
			   FILEEXT,
			   SFILENAME
			FROM
				BOARD_FILES
			WHERE
				BOARD_IDX   =  #{ board_idx  } 
			ORDER BY   
				FILE_NUM  ASC 
	   
	</select>
	
	<!-- 파일 지움 -->
	<delete   id="DeleteUploadFile">
      
		DELETE   
		FROM
			BOARD_FILES
		WHERE
			FILE_NUM =  #{ file_num  }
    
    </delete>	
	
 	<!-- 게시글 수정  -->
	<update   id = "BoardUpdate">
       
		UPDATE
			BOARD
		SET
			BOARD_TITLE   = #{ board_title  },
        	BOARD_CONT    = #{ board_cont   },
			MARKET_VALUE  = #{ market_value }
		WHERE
			BOARD_IDX    = #{ board_idx }    
       
    </update>
    
    <!-- 파일 정보 수정 - 파일이 추가될 때 idx는 기존 idx로 저장해야 함  -->
    <insert  id="FileUpdate">
      <foreach collection="fileList" item="file"
           index      = "i"  
           open       = "INSERT ALL"    
           close      = "SELECT * FROM DUAL"
           separator  = " " >
           INTO  BOARD_FILES  VALUES (
                GET_FILENUM()
              , #{ board_idx       }
              , #{ file.filename   }
              , #{ file.fileext    }
              , #{ file.sfilename  }
           )
      </foreach>
   </insert>
   
   
   <!-- 게시글 삭제할 때 파일 같이 삭제 -->
   <delete   id="FileDelete">
   
		DELETE   
		FROM
			BOARD_FILES
		WHERE
			BOARD_IDX  =  #{ board_idx }   
			
   </delete>
   
   <!-- 게시글 삭제 -->
   <delete   id="BoardDelete">
   
		DELETE
		FROM
			BOARD
		WHERE
			BOARD_IDX  =  #{ board_idx }
       
   </delete> 
   
   <!-- 이벤트 리스트 가져오기  --> 
    	<!-- 페이징된 리스트 가져오기 -->
	<select id="EventList"
			resultType="com.green.manager.vo.AdminEventVo">
	SELECT * FROM(
	SELECT
			ROW_NUMBER() OVER(ORDER BY NREF DESC, STEP ASC)  RNUM,
			B.BOARD_IDX,
			B.SUBMENU_ID,
			B.BOARD_TITLE,
			B.BOARD_CONT,
			B.MARKET_VALUE,
			TO_CHAR(B.BOARD_REGDATE, 'YYYY-MM-DD HH24:MI:SS') BOARD_REGDATE,
			B.READCOUNT,
			B.BNUM,
			B.LVL,
			B.STEP,
			B.NREF,
			B.DELBOARD,
			B.PARENT
		FROM
			BOARD B
        WHERE 
            SUBMENU_ID  =  'SUBMENU18'
            ) T
       WHERE 
		T.RNUM BETWEEN #{startnum} AND #{endnum}
		ORDER BY
		 NREF  DESC, STEP   ASC   
	</select>
	
	<select   id             = "GetEventBoard"
	          resultType     = "com.green.manager.vo.AdminEventVo">
		
		SELECT
			ROW_NUMBER() OVER(ORDER BY NREF DESC, STEP ASC)  RNUM,
			B.BOARD_IDX,
			B.SUBMENU_ID,
			B.BOARD_TITLE,
			B.BOARD_CONT,
			B.MARKET_VALUE,
			TO_CHAR(B.BOARD_REGDATE, 'YYYY-MM-DD HH24:MI:SS') BOARD_REGDATE,
			B.READCOUNT,
			B.BNUM,
			B.LVL,
			B.STEP,
			B.NREF,
			B.DELBOARD,
			B.PARENT
		FROM
			BOARD B        
		WHERE
			BOARD_IDX = #{ board_idx }

	</select> 
	
	<insert id="AdminEventInsert">
	
		INSERT INTO
			BOARD
			(
				BOARD_IDX,
				SUBMENU_ID,
				BOARD_TITLE,
				BOARD_CONT,
				USERCODE,
				BNUM,
				NREF
			)
		VALUES
			(
				(SELECT  NVL( MAX(BOARD_IDX), 0 ) + 1 FROM BOARD),
				#{ submenu_id },
				#{ board_title },
				#{ board_cont },
				0,
				(SELECT  NVL( MAX(BOARD_IDX), 0 ) + 1 FROM BOARD),
				(SELECT  NVL( MAX(BOARD_IDX), 0 ) + 1 FROM BOARD)
			)
	</insert>
	
	<update   id = "EventUpdate">
       
		UPDATE
			BOARD
		SET
			BOARD_TITLE  = #{ board_title },
        	BOARD_CONT   = #{ board_cont  }
		WHERE
			BOARD_IDX    = #{ board_idx }    
       
    </update>
    
     <!-- 게시글 삭제 -->
   <delete   id="EventDelete">
   
		DELETE
		FROM
			BOARD
		WHERE
			BOARD_IDX  =  #{ board_idx }
       
   </delete>

	<!--  게시글 삭제 : delnum = 1 -->
   <delete  id="BoardDelNum">
       
		UPDATE
			BOARD
		SET
			DELBOARD = 1
		WHERE
			BOARD_IDX    = #{board_idx}
       
   </delete>
   
    
	

    
    	<!-- 전체 자료수 조회 -->
	<select   id             = "GetTotalCount"
	          parameterType  = "hashmap"
	          resultType     = "_int">
	          
		SELECT
	    	COUNT( BOARD_IDX )  AS   TOTALCOUNT
		FROM   
	    	BOARD
	    <if test="submenu_id != null or submenu_id != ''"> 
		WHERE
			SUBMENU_ID = 'SUBMENU18'
	    </if>
	    
	</select>
	
	  <!-- 자식이 있는지 확인 -->
   <select  id="ChildCnt"
            resultType = "int" >
      
       SELECT
          CASE
            WHEN
              EXISTS (
                 SELECT
                 	PARENT
                 FROM
                 	BOARD
                 WHERE
                 	PARENT = #{board_idx}
              ) 
             THEN  1
             ELSE  0
          END
        FROM DUAL        
      
   </select>
	
	<select id="WinnerList"
			resultType="com.green.manager.vo.AdminEventVo">
	SELECT * FROM(
	SELECT
			ROW_NUMBER() OVER(ORDER BY NREF DESC, STEP ASC)  RNUM,
			B.BOARD_IDX,
			B.SUBMENU_ID,
			B.BOARD_TITLE,
			B.BOARD_CONT,
			B.MARKET_VALUE,
			TO_CHAR(B.BOARD_REGDATE, 'YYYY-MM-DD HH24:MI:SS') BOARD_REGDATE,
			B.READCOUNT,
			B.BNUM,
			B.LVL,
			B.STEP,
			B.NREF,
			B.DELBOARD,
			B.PARENT
		FROM
			BOARD B
        WHERE 
       
            SUBMENU_ID  =  'SUBMENU19'
            ) T
       WHERE 
		T.RNUM BETWEEN #{startnum} AND #{endnum}
		ORDER BY
		 NREF  DESC, STEP   ASC   
		
	</select>
	
	<insert id="AdminWinnerInsert">
	
		INSERT INTO
			BOARD
			(
				BOARD_IDX,
				SUBMENU_ID,
				BOARD_TITLE,
				BOARD_CONT,
				USERCODE,
				BNUM,
				NREF
			)
		VALUES
			(
				(SELECT  NVL( MAX(BOARD_IDX), 0 ) + 1 FROM BOARD),
				#{ submenu_id },
				#{ board_title },
				#{ board_cont },
				0,
				(SELECT  NVL( MAX(BOARD_IDX), 0 ) + 1 FROM BOARD),
				(SELECT  NVL( MAX(BOARD_IDX), 0 ) + 1 FROM BOARD)
			)
	</insert>
	
	<!-- 행사 등록  -->
	<insert id="SeminarInsert">
	INSERT INTO
		BOARD
		(
			BOARD_IDX,
			SUBMENU_ID,
			BOARD_TITLE,
			BOARD_CONT,
			USERCODE,
			MANAGERCODE,
			BNUM,
			NREF
		)
	VALUES
		(
			(SELECT  NVL( MAX(BOARD_IDX), 0 ) + 1 FROM BOARD),
			#{ submenu_id  },
			#{ board_title },
			#{board_contAddress},
			'0',
			'1',
			(SELECT  NVL( MAX(BOARD_IDX), 0 ) + 1 FROM BOARD),
			(SELECT  NVL( MAX(BOARD_IDX), 0 ) + 1 FROM BOARD)
		)
	</insert>
	
	<select id="SeminarList"
			resultType="com.green.manager.vo.AdminEventVo">
	SELECT * FROM(
	SELECT
			ROW_NUMBER() OVER(ORDER BY NREF DESC, STEP ASC)  RNUM,
			B.BOARD_IDX,
			B.SUBMENU_ID,
			B.BOARD_TITLE,
			B.BOARD_CONT,
			B.MARKET_VALUE,
			TO_CHAR(B.BOARD_REGDATE, 'YYYY-MM-DD HH24:MI:SS') BOARD_REGDATE,
			B.READCOUNT,
			B.BNUM,
			B.LVL,
			B.STEP,
			B.NREF,
			B.DELBOARD,
			B.PARENT
		FROM
			BOARD B
        WHERE 
       
            SUBMENU_ID  =  #{submenu_id}
            ) T
       WHERE 
		T.RNUM BETWEEN #{startnum} AND #{endnum}
		ORDER BY
		 NREF  DESC, STEP   ASC   
		
	</select>
	
	<update   id = "SetSeminarEdit">
		UPDATE
			BOARD
		SET
			BOARD_TITLE  = #{ board_title },
        	BOARD_CONT   = #{ board_contAddress  }
		WHERE
			BOARD_IDX    = #{ board_idx }    
    </update>
    
	
		<!-- 전체 자료수 조회 -->
	<select   id             = "GetTotalCount2"
	          parameterType  = "hashmap"
	          resultType     = "_int">
	          
		SELECT
	    	COUNT( BOARD_IDX )  AS   TOTALCOUNT
		FROM   
	    	BOARD
	    <if test="submenu_id != null or submenu_id != ''"> 
		WHERE
			SUBMENU_ID = #{ submenu_id }
	    </if>
	    
	</select>
  
	
</mapper>





   