<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="MyPage">   

	<select id="MyPageNoteSelect" resultType = "com.green.myPage.vo.MyPageVo">
		SELECT  b.BOARD_TITLE, m.NICKNAME, m.GRADE, b.USERCODE 
		FROM	BOARD b INNER JOIN MEMBER m ON b.USERCODE = m.USERCODE
		WHERE	b.BOARD_IDX = #{board_idx} 
	</select>
	
	<insert id="MyPageNoteInsert">
	
		INSERT INTO
			NOTE
			(
				NOTE_IDX,
				NOTE_TITLE,
				NOTE_CONT,
				NOTE_REGDATE,
				SEND_USERCODE,
				RECEIVER_USERCODE,
				READMARK,
				DELNOTE
			)
		VALUES
			(
				(SELECT  NVL( MAX(NOTE_IDX), 0 ) + 1 FROM NOTE),
				#{ notetitle },
				#{ notecont },
				to_date(sysdate,'yyyy.mm.dd hh24:mi'),
				#{sendusercode},
				#{ receiver_usercode },
				0,
				0
			)
	</insert>
	
	<!-- 전체 자료수 조회 -->
   <select   id             = "GetTotalCount"
             parameterType  = "hashmap"
             resultType     = "_int">
      SELECT
         COUNT( NOTE_IDX )  AS   TOTALCOUNT
       FROM   
         NOTE
       <if test ="sendData == 'sendData'">
       WHERE     
          SEND_USERCODE = #{usercode}
       </if>
       
       <if test = "recData == 'recData'" >
       WHERE     
          RECEIVER_USERCODE = #{usercode}
       </if>
   </select>
   
   <!-- 쪽지 페이징 list  -->
   <select  id="GetMyPageList"
            resultType="com.green.myPage.vo.MyPageVo">
   	  SELECT * FROM	
	  (		SELECT 		ROW_NUMBER() OVER(ORDER BY n.NOTE_REGDATE ASC, n.READMARK DESC)  RNUM
	  					, n.NOTE_IDX
	  					, n.NOTE_TITLE
	  					, n.NOTE_CONT
	  					, n.NOTE_REGDATE
	  					, n.SEND_USERCODE
	  					, n.RECEIVER_USERCODE
	  					, n.READMARK
	  					, n.DELNOTE
				        <if test = "sendData == 'sendData'">
				          , m.NICKNAME
				        </if>
				        
				        <if test = "recData == 'recData'" >
				         , m.NICKNAME
				        </if>
				        
	  		FROM	    NOTE n JOIN MEMBER m ON n.RECEIVER_USERCODE = m.USERCODE
	  		<if test = "sendData == 'sendData'">
	           WHERE	n.SEND_USERCODE = #{usercode} 
	        </if>
	       
	        <if test = "recData == 'recData'" >
	         WHERE	    n.RECEIVER_USERCODE = #{usercode} 
	        </if>
	  ) T 
      WHERE     T.RNUM  
                BETWEEN  #{startnum}  AND  #{endnum}  
   </select>
   
   <!-- 포인트 자료수 조회 -->
   <select   id             = "GetTotalSendPointCount"
             parameterType  = "hashmap"
             resultType     = "_int">
      SELECT
         COUNT( SEND_USERCODE )  AS   TOTALCOUNT
       FROM   
         NOTE
       WHERE     
          SEND_USERCODE = #{usercode}

   </select>
   
   <!-- 쪽지 내용 보기 -->
   <select   id             = "GetNoteView"
             resultType="com.green.myPage.vo.MyPageVo">
      SELECT
          n.NOTE_IDX, n.NOTE_TITLE, n.NOTE_CONT, n.NOTE_REGDATE, n.SEND_USERCODE
	  	, n.RECEIVER_USERCODE, n.READMARK, n.DELNOTE, m.NICKNAME
       FROM	    NOTE n JOIN MEMBER m ON n.RECEIVER_USERCODE = m.USERCODE
       WHERE     
          n.NOTE_IDX = #{note_idx}
   </select>
   
   	<!-- 쪽지 삭제  -->
   <update  id="NoteDelete">
   	  UPDATE   NOTE
      SET      DELNOTE 		=   1
      WHERE    NOTE_IDX  	=   #{note_idx}
   </update>
   
   	<!-- 쪽지 답장  형식-->
   
   <!-- 내공주기  -->
   <update  id="UpdatePoint">
   	  UPDATE   MEMBER
      SET      POINT 		=  POINT + #{point}
      WHERE    NICKNAME  	=   #{nickname}
   </update>
   
   <!-- 내공 페이징 list  -->
    <select  id="GetSendPointList"
            resultType="com.green.myPage.vo.MyPageVo">
   	  SELECT * FROM	
	  (		SELECT 		ROW_NUMBER() OVER(ORDER BY n.NOTE_REGDATE ASC, n.READMARK DESC)  RNUM
				        ,m.NICKNAME
				        
	  		FROM	    NOTE n JOIN MEMBER m ON n.RECEIVER_USERCODE = m.USERCODE
	        
	        WHERE	n.SEND_USERCODE = #{usercode}
	  ) T 
      WHERE     T.RNUM  
                BETWEEN  #{startnum}  AND  #{endnum}  
   </select>
   
   <!-- 읽음 상태 업데이트 -->
   <update  id="ReadmarkCheck">
   	  UPDATE   NOTE
      SET      READMARK 			=   1
      WHERE    NOTE_IDX  	=   #{note_idx} AND RECEIVER_USERCODE = #{receiver_usercode}
   </update>

	<!-- 비밀번호 체크 -->
	<select id="CheckPw"
			resultType="int">
	
		SELECT
          CASE
            WHEN
              EXISTS (
                 SELECT
                 	*
                 FROM
                 	MEMBER
                 WHERE
                 	USERCODE = #{ usercode }
                 AND
                    PASSWD = #{ passwd }
              ) 
             THEN  1
             ELSE  0
          END
        FROM DUAL
	
	</select>

	<update id="UpdateUser">
	
		UPDATE
			MEMBER
		SET
			PASSWD   = #{ passwd },
			GENDER   = #{ gender },
			NICKNAME = #{ nickname },
			EMAIL    = #{ email },
			ADDR     = #{ addr }
		WHERE
			USERCODE = #{ usercode }
	
	</update>
	
	 <!-- 파일 저장 -->
    <insert  id="UpdateProfile">
      <foreach collection="fileList" item="file"
           index      = "i"  
           open       = "INSERT ALL"    
           close      = "SELECT * FROM DUAL"
           separator  = " " >
           INTO  BOARD_FILES  VALUES (
                GET_FILENUM()
              , ( SELECT MAX(BOARD_IDX) FROM BOARD  )
              , #{ file.filename   }
              , #{ file.fileext    }
              , #{ file.sfilename  }
           )
      </foreach>
   
   </insert>

</mapper>





   